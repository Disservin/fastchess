name: Unit Tests

on:
  workflow_call:

jobs:
  # Basic tests for all platforms
  basic-tests:
    name: Basic Tests - ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Ubuntu 22.04", os: ubuntu-22.04, shell: "bash {0}" }
          - { name: "MacOS Apple Clang", os: macos-latest, shell: "bash {0}" }
          - {
              name: "Windows GCC",
              os: windows-latest,
              msys_sys: "mingw64",
              msys_env: "x86_64",
              msys_comp: "gcc",
              cxx: "g++",
              shell: "msys2 {0}",
            }
          - {
              name: "Windows clang",
              os: windows-latest,
              msys_sys: "clang64",
              msys_env: "clang-x86_64",
              msys_comp: "clang",
              cxx: "clang++",
              shell: "msys2 {0}",
            }

    defaults:
      run:
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installing required packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt install valgrind
          clang++ --version
          g++ --version
          sudo sysctl -w vm.mmap_rnd_bits=28

      - name: Install windows make
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.config.msys_sys}}
          install: mingw-w64-${{matrix.config.msys_env}}-${{matrix.config.msys_comp}} make git expect

      - name: Macos clang version
        if: runner.os == 'Macos'
        run: |
          clang++ --version

      - name: Running Basic Tests
        run: |
          ${{ runner.os == 'Windows' && format('{0} --version', matrix.config.cxx) || 'echo "Non-Windows platform"' }}
          make clean
          ${{ runner.os == 'Windows' && format('make -j2 tests CXX={0}', matrix.config.cxx) || 'make -j2 tests' }}
          ./fastchess-tests*

  # AddressSanitizer tests (Unix only)
  asan-tests:
    name: AddressSanitizer Tests - ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Ubuntu 22.04", os: ubuntu-22.04, shell: "bash {0}" }
          - { name: "MacOS Apple Clang", os: macos-latest, shell: "bash {0}" }

    defaults:
      run:
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installing required packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt install valgrind
          clang++ --version
          g++ --version
          sudo sysctl -w vm.mmap_rnd_bits=28

      - name: Running AddressSanitizer Tests (default compiler)
        run: |
          make clean
          make -j2 tests san=asan
          ./fastchess-tests* -tse="*PERFT*"

      - name: Running AddressSanitizer Tests (clang++)
        run: |
          make clean
          make -j2 tests san=asan CXX=clang++
          ./fastchess-tests*

  # ThreadSanitizer tests (Unix only)
  tsan-tests:
    name: ThreadSanitizer Tests - ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Ubuntu 22.04", os: ubuntu-22.04, shell: "bash {0}" }
          - { name: "MacOS Apple Clang", os: macos-latest, shell: "bash {0}" }

    defaults:
      run:
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installing required packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt install valgrind
          clang++ --version
          g++ --version
          sudo sysctl -w vm.mmap_rnd_bits=28

      - name: Running ThreadSanitizer Tests
        run: |
          make clean
          make -j2 tests san=thread
          ./fastchess-tests* -tse="*PERFT*"

  # UndefinedBehaviorSanitizer tests (Unix only)
  ubsan-tests:
    name: UBSan Tests - ${{matrix.config.name}}
    runs-on: ${{matrix.config.os}}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { name: "Ubuntu 22.04", os: ubuntu-22.04, shell: "bash {0}" }
          - { name: "MacOS Apple Clang", os: macos-latest, shell: "bash {0}" }

    defaults:
      run:
        shell: ${{ matrix.config.shell }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installing required packages
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt install valgrind
          clang++ --version
          g++ --version
          sudo sysctl -w vm.mmap_rnd_bits=28

      - name: Running UndefinedBehaviorSanitizer Tests
        run: |
          make clean
          make -j2 tests san=undefined CXX=clang++
          ./fastchess-tests* -tse="*PERFT*"

  # Valgrind tests (Linux only)
  valgrind-tests:
    name: Valgrind Tests
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Installing required packages
        run: |
          sudo apt-get update
          sudo apt install valgrind
          clang++ --version
          g++ --version
          sudo sysctl -w vm.mmap_rnd_bits=28

      - name: Running Valgrind Tests
        run: |
          make clean
          make -j2 tests CXX=g++
          valgrind --quiet --track-fds=yes --error-exitcode=1 --errors-for-leak-kinds=all --leak-check=full ./fastchess-tests* -tse="*PERFT*"
